@model FNC_AB_ORDER_MANAGEMENT.Models.UtsattningarModel

@{
    ViewBag.Title = "Redigera Utsättningar";
}

<h2>Redigera Utsättningar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        <button id="edit" type="button">Redigera</button>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Ordernr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ordernr, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Ordernr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KundID, htmlAttributes: new { @class = "control-label col-md-2" })
                @{
                    if (Model != null)
                    {              
                        <div class="col-md-10">
                            <select id="selectlista" data-placeholder="Välj en kund..." class="chzn-select" style="width: 350px;" tabindex="2" disabled="disabled" >
                                @foreach (var item in Model.KundLista)
                                {
                                    if (item.ID == Model.KundID)
                                    {                                       
                                        <option selected="selected" value="@item.ID"> @item.Namn</option>
                                    }
                                    else
                                    {
                                        <option id="@item.ID" value="@item.ID"> @item.Namn</option>
                                    }
                                   
                                }
                            </select>
                        </div>
               
                    }
                }

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefonnr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefonnr, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Telefonnr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ort, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Ort, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InDatum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InDatum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.InDatum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UtDatum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UtDatum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UtDatum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StyckPris, htmlAttributes: new { @class = "control-label col-md-2" })
            
            <div class="col-md-10">
                @if (Model != null)
                {
                    @Html.DropDownListFor(model => model.StyckPris, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Ja" },
                            new { Value = "false", Text = "Nej" },
                        },
                        "Value",
                        "Text",
                        Model
                        ), new { @class = "form-control", style = "width: 350px;", disabled = "disabled" }
                        )
                }
            </div>

        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.Langd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Langd, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Langd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Timmar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Timmar, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Timmar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ovrigt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Ovrigt, 5, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ovrigt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })            
            @{
                if (Model != null)
                {               
                    <div class="col-md-10">
                        <select id="statuslista" data-placeholder="Välj en kund..." class="chzn-select" style="width: 350px;" tabindex="2" disabled="disabled" >
                            @foreach (var item in Model.statuslista)
                            {
                                if (item == Model.Status)
                                {                                       
                                    <option selected="selected" value="@item"> @item</option>
                                }
                                else
                                {
                                    <option id="@item" value="@item"> @item</option>
                                }
                               
                            }
                        </select>
                    </div>               
                }
            }           
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GPS, htmlAttributes: new { @class = "control-label col-md-2" })
            
            <div class="col-md-10">
                @if (Model != null)
                {
                    @Html.DropDownListFor(model => model.GPS, new SelectList(
                        new[]
                        {
                            new { Value = "true", Text = "Ja" },
                            new { Value = "false", Text = "Nej" },
                        },
                        "Value",
                        "Text",
                        Model
                        ), new { @class = "form-control", style = "width: 350px;", disabled = "disabled" }
                        )
                }
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Anvandrare, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Anvandrare, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Anvandrare, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Exporterad, htmlAttributes: new { @class = "control-label col-md-2" })
            @{
                if (Model != null)
                {

                    <div class="col-md-10">
                        <select id="exporteradLista" data-placeholder="Välj en kund..." class="chzn-select" style="width: 350px;" tabindex="2" disabled="disabled">
                            @if (Model.Exporterad == true)
                            {

                                <option selected="selected" value="@Model.Exporterad.ToString()"> Ja</option>
                                <option value="false"> Nej</option>
                            }
                            else
                            {
                                <option selected="selected" value="@Model.Exporterad.ToString()"> Nej</option>
                                <option value="true"> Ja</option>

                            }
                            
                        </select>
                    </div>

                }
            }
        </div>


       

           

      

        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Spara" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Exportera till pdf" class="btn btn-default" id="pdfexpo" onclick="location.href='@Url.Action("pdf", "Utsattningar", new { @bestNr = Model.Ordernr, @kund = Model.KundNamn, @ort = Model.Ort, @adress = Model.Adress, @inDat = Model.InDatum, @utDat = Model.UtDatum, @etab = Model.StyckPris, @m = Model.Langd, @inmId =Model.ID })'" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Radera Utsättning" class="btn btn-default" onclick="location.href='@Url.Action("TaBortUtsattning/"+Model.ID , "Utsattningar")'" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Tillbaka", "Utsattningar", new { st = Model.Status }, null)
</div>
<script type="text/javascript">
    
    $("form").submit(function (eventObj) {
        
        //KundLista
        var e = document.getElementById("selectlista");
        var strUser = e.options[e.selectedIndex].value;
        console.log(strUser);

        $('<input />').attr('type', 'hidden')
            .attr('name', "KundID")
            .attr('value', strUser)
            .appendTo('form');

        // StatusLista
        var s = document.getElementById("statuslista");
        var st = s.options[s.selectedIndex].value;
        console.log(strUser);

        $('<input />').attr('type', 'hidden')
            .attr('name', "Status")
            .attr('value', st)
            .appendTo('form');
       

    });

    $(document).ready(function(){

        document.getElementById("pdfexpo").addEventListener("click", myFunction);
        $("#selectlista").chosen({
            allow_single_deselect: true,
            disable_search: false
        });
        $("select").chosen({
            allow_single_deselect: true,
            disable_search: true
        });

    });   

    $('#edit').click(function() {
        $('#Ordernr').prop('readOnly', false);
        $('#selectlista').prop('disabled', false).trigger("chosen:updated");
        $('#Telefonnr').prop('readOnly', false);
        $('#Ort').prop('readOnly', false);
        $('#Adress').prop('readOnly', false);
        $('#InDatum').prop('readOnly', false);
        $('#UtDatum').prop('readOnly', false);
        $('#StyckPris').prop('disabled', false).trigger("chosen:updated");
        $('#Langd').prop('readOnly', false);
        $('#Timmar').prop('readOnly', false);     
        $('#Ovrigt').prop('readOnly', false);
        $('#GPS').prop('disabled', false).trigger("chosen:updated");
        $('#statuslista').prop('disabled', false).trigger("chosen:updated");
    });

    function myFunction() {
       
        
        $("#exporteradLista").val("true");
        $('#exporteradLista').trigger('chosen:updated');
    }
</script>

@using FNC_AB_ORDER_MANAGEMENT.Models;
@model FNC_AB_ORDER_MANAGEMENT.Models.InmatningarModel

@{
    ViewBag.Title = "Inmätningar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<header>
    <style type="text/css" src="content/jquery.dataTables.min.css"></style>
    <script type="text/javascript" src="~/scripts/jquery-1.12.4.js"></script>
    @*<script type="text/javascript" src="~/scripts/jquery.dataTables.min.js"></script>*@
    <script type="text/javascript" src="~/scripts/jquery.dataTables.min.1.10.15.js"></script>
    <script type="text/javascript" src="~/scripts/jquery.dataTables.select.min.js"></script>

</header>

<div class="container">
    <h2 style="vertical-align: middle; text-align: center; font-weight: bold">Inmätningar</h2>
    <hr />
    <div class="form-group">
        <div>
            <hr />         
            <h3 style=" width:50%; text-align:center;" id="StatusSortering">   @Model.Status </h3>
        </div>
        <div class="col-md-offset-2 col-md-10">

            <input id="p" type="button" Onclick="location.href = '@Url.Action("Inmatningar", new {st = "Pågående"})'" value="Pågående" class="btn btn-default" />
            <input id="es" type="button" Onclick="location.href = '@Url.Action("Inmatningar", new {st = "Ej slutförd"})'" value="Ej slutförd" class="btn btn-default" />
            <input id="eg" type="button" Onclick="location.href = '@Url.Action("Inmatningar", new {st = "Ej genomförbar"})'" value="Ej genomförbar" class="btn btn-default" />
            <input id="s" type="button" Onclick="location.href = '@Url.Action("Inmatningar", new {st = "Slutförd"})'" value="Slutförd" class="btn btn-default" />

        </div>
    </div>
</div>

<table id="example" class="display" cellspacing="0" width="100%">
    <thead>
        <tr><th></th>
            <th>Kund</th>
            <th>Status</th>
            <th>Adress</th>
            <th>Ordernr</th>
            <th>Start datum</th>
            <th>Slut datum</th>
            <th>Övrigt</th>
            <th>Exporterad</th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th></th>
            <th>Kund</th>
            <th>Status</th>
            <th>Adress</th>
            <th>Ordernr</th>
            <th>Start datum</th>
            <th>Slut datum</th>
            <th>Övrigt</th>
            <th>Exporterad</th>
        </tr>
    </tfoot>
    <tbody>
        @{
            if (Model != null)
            {
                foreach (var item in Model.InmatningsLista)
                {
                    <tr id="@item.ID">
                        <td name="@item.ID">@*<input type="checkbox" />*@</td>
                        <td Onclick="location.href='@Url.Action("RedigeraInmatningar/"+item.ID, "Inmatningar")'">@item.KundNamn</td>
                        <td>@item.Status</td>
                        <td>@item.Adress</td>
                        <td>@item.Ordernr</td>
                        <td>
                            @if (item.InDatum != null)
                            {
                                @item.InDatum.Value.ToShortDateString()
                            }
                        </td>
                        <td>
                            @if (item.UtDatum != null)
                            {
                                @item.UtDatum.Value.ToShortDateString()
                            }
                        </td>
                        <td>@item.Ovrigt</td>
                        @if (item.Exporterad == true)
                        {

                            <td>Ja</td>
                        }
                        else
                        {
                            <td>Nej</td>
                        }
                    </tr>
                }
            }
        }

    </tbody>
</table>
<div class="form-group">   
    <input type="button" value="Ny Inmätning" class="btn btn-default" onclick="location.href='@Url.Action("NyInmatning", "Inmatningar")'" />  
</div>

<div class="form-group">
    <div>
        <input type="button" value="Exportera till pdf" id="skickaPdf" class="btn btn-default" />
    </div>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        <div class="col-md-offset-2 col-md-10">
            
            
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new {@class = "control-label col-md-2"})
                @{
                    if (Model != null)
                    {

                        <div class="col-md-10">
                            <select id="statuslista" data-placeholder="Välj en kund..." class="chzn-select" style="width: 350px;" tabindex="2">
                               
                                @{String statusen ;}
                                @{statusen = "Alla";}
                                @{Model.statuslista.Add(@statusen);}
                                 @foreach (var item in Model.statuslista)
                                {

                                    if (item == Model.Status)
                                    {

                                        <option selected="selected" value="@item"> @item</option>
                                    }
                                    else
                                    {
                                        <option id="@item" value="@item"> @item</option>
                                    }



                                }
                            </select>
                        </div>

                    }
                }
              
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.KundNamn, htmlAttributes: new {@class = "control-label col-md-2"})
                @{
                    if (Model != null)
                    {

                        <div class="col-md-10">
                            <select id="kundlistan" data-placeholder="Välj en kund..." class="chzn-select" style="width: 350px;" tabindex="2">
                               
                                @{KundModel kunden = new KundModel();}
                                @{kunden.Namn = "Alla";}
                                @{Model.KundLista.Insert(0, @kunden);}
                                 @foreach (var item in Model.KundLista)
                                { 

                                if (item.Namn.Equals(Model.KundNamn))

                                {

                                   <option selected="selected" value="@item.Namn"> @item.Namn</option>
                                }
                               
                                 else
                                {
                                    <option id = "@item.ID" value = "@item.Namn" > @item.Namn </option>
                                }

                                }
                            </select>

                        </div>

                    }
                }


            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Exporterad, htmlAttributes: new {@class = "control-label col-md-2"})
                @{
                    if (Model != null)
                    {

                        <div class="col-md-10">
                            <select id="exporteradLista" data-placeholder="Välj styckpris" class="chzn-select" style="width: 350px;" tabindex="2">

                               
                                 @foreach (var item in Model.ExporteradLista)
                                 {

                                     string bool1;
                                     bool1 = item;
                                     bool bool2 = false;

                                     if (bool1.Equals("Ja"))
                                     {
                                         bool2 = true;
                                     }
                                   

                                     if (Model.Exporterad == bool2)
                                     {

                                        <option selected="selected" value="@bool2.ToString()"> @item</option>
                                    }
                                    else
                                    {

                                    <option value="@bool2.ToString()"> @item</option>

                                    }
                                }
                               
                                 @if (Model.Exporterad == null)
                                {
                                <option selected="selected" value="Alla"> Alla</option>

                                }
                                else if (Model.Exporterad != null)
                                {
                                <option value="Alla"> Alla</option>
                                }
                            </select>
                        </div>
                    }
                }
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InDatum, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InDatum, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.InDatum, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UtDatum, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UtDatum, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.UtDatum, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Sök" class="btn btn-default"/>
                </div>
            </div>


        </div>
        </div>
       

                    }
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="button" value="Exportera till pdf test" class="btn btn-default" id="pdfexpo" onclick="location.href='@Url.Action("FleraPdfer", "Inmatningar")'" />
    </div>
</div>
<script>
    $("#skickaPdf").click(function () {


        var table = $('#example').DataTable();

        var test = table.rows({ selected: true }).data();




        //console.log(test[0].DT_RowId);

        var roleList = new Array();
        var usrId = "testuser";


        /* one  way of adding items to array */
        //test.forEach(function(element) {
        //    console.log(element.DT_RowId);
        //});
        for (i = 0; i < test.length; i++) {
            console.log(test[i].DT_RowId);
            roleList.push(test[i].DT_RowId);

        };

        $.ajax({
            type: "POST",
            traditional: true, /* I M P O R T A N T */
            url: '@Url.Action("tempPDF", "Inmatningar")',
            data: { userId: roleList},
            success: function (returndata) {
                if (returndata.success) {
                    window.location = "/Inmatningar/FleraPdfer";
                    
                }

                //var blob = new Blob([returndata]);
                //var link = document.createElement('a');
                //link.href = window.URL.createObjectURL(blob);
                //link.download = "Dossier_" + new Date() + ".pdf";
                //link.click();
                //alert(returndata);
            },
            error: function(returndata) {
                alert("Error:\n" + returndata.responseText);
            }
        });


    });

    $("form").submit(function (eventObj) {

        // Kundlista
        var e = document.getElementById("kundlistan");
        var strUser = e.options[e.selectedIndex].value;
        console.log(strUser);

        $('<input />').attr('type', 'hidden')
            .attr('name', "KundNamn")
            .attr('value', strUser)
            .appendTo('form');

        // Statuslista
        var s = document.getElementById("statuslista");
        var st = s.options[s.selectedIndex].value;
        console.log(strUser);

        $('<input />').attr('type', 'hidden')
            .attr('name', "Status")
            .attr('value', st)
            .appendTo('form');

        //ExporteradLista
        var ex = document.getElementById("exporteradLista");
        var exp = ex.options[ex.selectedIndex].value;
        console.log(exp);

        if (exp == "Alla") {

        }
        else {
            $('<input />').attr('type', 'hidden')
                .attr('name', "Exporterad")
                .attr('value', exp)
                .appendTo('form');
        }
    });
    $(document).ready(function () {
        $('#example').DataTable(
             {
                 columnDefs: [ {
                     orderable: false,
                     className: 'select-checkbox',

                     targets:   0
                 } ],
                 select: {
                     style: 'multi',
                     selector: 'td:first-child'
                 },
                 order: [[ 1, 'asc' ]]
             });


        $("#exporteradLista").chosen({
            allow_single_deselect: true,
            disable_search: true



        });
        $("#kundlistan").chosen({
            allow_single_deselect: true,
            disable_search: false
        });

        $("#statuslista").chosen({
            allow_single_deselect: true,
            disable_search: true
        });

    });
</script>












@model FNC_AB_ORDER_MANAGEMENT.Models.InmatningarModel

@{
    ViewBag.Title = "Redigera Inmätningar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Redigera Inmätningar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" >
        <hr />
        <button id="edit" type="button" class="btn btn-default">Redigera</button>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Ordernr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ordernr, new { htmlAttributes = new { @class = "form-control" ,  @readonly = "readonly" }})
                @Html.ValidationMessageFor(model => model.Ordernr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KundNamn, htmlAttributes: new { @class = "control-label col-md-2" })
                @{
                    if (Model != null)
                    {

                        <div class="col-md-10">
                            <select id="selectlista" data-placeholder="Välj en kund..." class="chzn-select" style="width: 350px;" tabindex="2" disabled="disabled">
                                @foreach (var item in Model.KundLista)
                                {
                                    if (item.ID == Model.KundID)
                                    {

                                        <option selected="selected" value="@item.ID"> @item.Namn</option>
                                    }
                                    else
                                    {
                                        <option id="@item.ID" value="@item.ID"> @item.Namn</option>
                                    }



                                }
                            </select>
                        </div>

                    }
                }
                @*@Html.EditorFor(model => model.Kund, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Kund, "", new { @class = "text-danger" })*@            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefonnr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefonnr, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Telefonnr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ort, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ort, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Ort, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Adress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InDatum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InDatum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.InDatum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UtDatum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UtDatum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.UtDatum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StyckPris, htmlAttributes: new { @class = "control-label col-md-2" })
            @{
                if (Model != null)
                {

                    <div class="col-md-10">
                        <select id="styckPrisLista" data-placeholder="Välj styckpris" class="chzn-select" style="width: 350px;" tabindex="2" disabled="disabled">

                            @foreach (var item in Model.styckPrislista)
                            {
                                string bool1;
                                bool1 = item;
                                bool bool2 = false;

                                if (bool1.Equals("Ja"))
                                {
                                    bool2 = true;
                                }

                                if (Model.StyckPris==bool2)
                                {

                                    <option selected="selected" value="@bool2.ToString()"> @item</option>
                                }
                                else
                                {

                                    <option value="@bool2.ToString()"> @item</option>
                                }
                            }
                        </select>
                    </div>
                }
            }
            @*<div class="col-md-10">
                @Html.EditorFor(model => model.StyckPris, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.StyckPris, "", new { @class = "text-danger" })
            </div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Langd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Langd, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Langd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Timmar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Timmar, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Timmar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fakturerad, htmlAttributes: new { @class = "control-label col-md-2" })
            @{
                if (Model != null)
                {

                    <div class="col-md-10">
                        <select id="fakturalista" data-placeholder="Välj en kund..." class="chzn-select" style="width: 350px;" tabindex="2" disabled="disabled">
                            @foreach (var item in Model.fakturaLista)
                            {
                                string bool1;
                                bool1 = item;
                                bool bool2 = false;

                                if (bool1.Equals("Ja"))
                                {
                                    bool2 = true;
                                }

                                if (Model.Fakturerad==bool2)
                                {

                                    <option selected="selected" value="@bool2.ToString()"> @item</option>
                                }
                                else
                                {

                                    <option value="@bool2.ToString()"> @item</option>
                                }
                            }
                        </select>
                    </div>

                }
            }
            @*<div class="col-md-10">
                @Html.EditorFor(model => model.Fakturerad, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Fakturerad, "", new { @class = "text-danger" })
            </div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ovrigt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Ovrigt, 5, 50, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Ovrigt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            
            @{
                if (Model != null)
                {

                    <div class="col-md-10">
                        <select id="statuslista" data-placeholder="Välj en kund..." class="chzn-select" style="width: 350px;" tabindex="2" disabled="disabled">
                            @foreach (var item in Model.statuslista)
                            {
                                if (item == Model.Status)
                                {

                                    <option selected="selected" value="@item"> @item</option>
                                }
                                else
                                {
                                    <option id="@item" value="@item"> @item</option>
                                }



                            }
                        </select>
                    </div>

                }
            }

            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AID, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Spara" class="btn btn-default"   />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Radera Inmätning" class="btn btn-default" onclick="location.href='@Url.Action("TaBortInmatning/"+Model.ID , "Inmatningar")'" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Tillbaka", "Inmatningar", new { st = Model.Status }, null)
</div>
<script type="text/javascript">

    $("form").submit(function (eventObj) {

        // Kundlista
        var e = document.getElementById("selectlista");
        var strUser = e.options[e.selectedIndex].value;
        console.log(strUser);

        $('<input />').attr('type', 'hidden')
            .attr('name', "KundID")
            .attr('value', strUser)
            .appendTo('form');

        // Statuslista
        var s = document.getElementById("statuslista");
        var st = s.options[s.selectedIndex].value;
        console.log(strUser);

        $('<input />').attr('type', 'hidden')
            .attr('name', "Status")
            .attr('value', st)
            .appendTo('form');

        // FakturaLista
        var f = document.getElementById("fakturalista");
        var f2 = f.options[f.selectedIndex].value;
        console.log(f2);

        $('<input />').attr('type', 'hidden')
            .attr('name', "Fakturerad")
            .attr('value', f2)
            .appendTo('form');

        //StyckprisLista
        var sp = document.getElementById("styckPrisLista");
        var spl = sp.options[sp.selectedIndex].value;
        console.log(spl);

        $('<input />').attr('type', 'hidden')
            .attr('name', "StyckPris")
            .attr('value', spl)
            .appendTo('form');

    });

    $(document).ready(function(){
        $("#selectlista").chosen({
            allow_single_deselect:true,
            disable_search:false
        });
        $("select").chosen({
            allow_single_deselect:true,
            disable_search:true
        });
    });

    // Funktion för att aktivera redigering av fälten
    $('#edit').click(function() {
        $('#Ordernr').prop('readOnly', false);
        $('#selectlista').prop('disabled', false).trigger("chosen:updated");
        $('#Telefonnr').prop('readOnly', false);
        $('#Ort').prop('readOnly', false);
        $('#Adress').prop('readOnly', false);
        $('#InDatum').prop('readOnly', false);
        $('#UtDatum').prop('readOnly', false);
        $('#styckPrisLista').prop('disabled', false).trigger("chosen:updated");
        $('#Langd').prop('readOnly', false);
        $('#Timmar').prop('readOnly', false);
        $('#fakturalista').prop('disabled', false).trigger("chosen:updated");
        $('#Ovrigt').prop('readOnly', false);
        $('#statuslista').prop('disabled', false).trigger("chosen:updated");       
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

